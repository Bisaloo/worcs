% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codebook.R
\name{make_codebook}
\alias{make_codebook}
\title{Create codebook for a dataset}
\usage{
make_codebook(
  data,
  file_name = "codebook.Rmd",
  render_file = TRUE,
  csv_file = gsub("Rmd$", "csv", file_name)
)
}
\arguments{
\item{data}{A data.frame for which to create a codebook.}

\item{file_name}{Character. File name to write the codebook \code{rmarkdown}
file to.}

\item{render_file}{Logical. Whether or not to render the document.}

\item{csv_file}{Character. File name to write the codebook \code{rmarkdown}
file to. By default, uses the filename stem of the \code{file_name} argument.
Set to \code{NULL} to write the codebook only to the 'Rmarkdown' file, and
not to \code{.csv}.}
}
\value{
\code{Logical}, indicating whether or not the operation was
succesful. This function is mostly called for its side effect of rendering an
\code{rmarkdown} codebook.
}
\description{
Creates a codebook for a dataset in 'Rmarkdown' format, and
renders it to 'markdown' for 'GitHub'. Users can customize the 'Rmarkdown'
document and re-knit it, for example, to add a paragraph with details on
the data collection procedures. The variable descriptives are stored in
a \code{.csv} file, which can be edited in 'R' or a spreadsheet program.
Columns can be appended, and we encourage users to complete at least the
following two columns in this file:
\itemize{
\item{category} Describe the type of variable in this column. For example:
"morality".
\item{description} Provide a plain-text description of the variable. For
example, the full text of a questionnaire item: "People should be willing to
do anything to help a member of their family".
}
Re-knitting the 'Rmarkdown' file (using \code{\link[rmarkdown]{render}}) will
transfer these changes to the 'markdown' file for 'GitHub'.
}
\examples{
library(rmarkdown)
library(knitr)
file_name <- tempfile("codebook", fileext = ".Rmd")
make_codebook(iris, file_name = file_name, csv_file = NULL)
unlink(c(
  file_name,
  gsub("\\\\.Rmd", "\\\\.md", file_name),
  gsub("\\\\.Rmd", "\\\\.html", file_name),
  gsub("\\\\.Rmd", "_files", file_name)
), recursive = TRUE)
}
